@model IEnumerable<AirFlight.Models.Flight>
@using Microsoft.AspNet.Identity;

@{
    ViewBag.Title = "Список рейсов";
}
@{ 
    List<int> countp = new List<int>();
    foreach (var i in ViewBag.registrationlist)
    { countp.Add(i); }}
<div id="res">
    <input style="display:none" id="user" value="@User.Identity.GetUserId()">
    @* данное поле необходимо для определения типа регистрации открыта или закрыта при нажатии правой кнопкой мышы*@
    <input style="display:none" id="approv" value=""> 
        <div id="search-block-form" style="position:absolute; right:120px;top:70px;overflow:no-display">
            <input style="display:none" id="idpass" value="@ViewBag.findpassenger">                
            <div class="form-item">
                <input type="text" id="findpass" value="@ViewBag.findepassenger" placeholder="Поиск пассажира...">
            </div>
            <div class="form-actions">
                <input type="button" id="find" value="Поиск" class="form-submit">
            </div>
        </div>
    <h4>&nbsp;</h4>
    <h3 style="text-align:center">Список досупных рейсов</h3>  
    @if (@ViewBag.ChoosDate == 0) { ViewBag.ColorR = "mediumblue"; } else { ViewBag.ColorR = ""; }
    @if (@ViewBag.ChoosDate == 1) { ViewBag.ColorD = "mediumblue"; } else { ViewBag.ColorD = ""; }
    <h4 style="text-align:center">
        Выберите период с
        <ins id="ViewDateStart" style="color:@ViewBag.ColorR"><input id="StartDate" type="text" style="text-align:center; width:1pt;visibility:hidden" value="@ViewBag.SD" name="StartDate" />@ViewBag.StartDate</ins>
        по <ins id="ViewDateEnd" style="color:@ViewBag.ColorR"><input id="EndDate" type="text" style="text-align:center; width:1pt;visibility:hidden" value="@ViewBag.ED" name="EndDate" />@ViewBag.EndDate</ins>
        Или укажите дату вылета <ins id="ViewCurrentDate" style="color:@ViewBag.ColorD"><input id="CurrentDate" type="text" style="text-align:center; width:1pt;visibility:hidden" value="@ViewBag.CD" name="CurrentDate" />@ViewBag.CurrentDate</ins>
        <input id="ChoosDate" type="text" style="text-align:center; width:1pt;visibility:hidden" value="@ViewBag.ChoosDate" name="ChoosDate" />
    </h4>
    <h4 style="text-align:center">
        Укажите направление вылета: @Html.DropDownList("selectRoute", new List<SelectListItem>() {
        new SelectListItem { Text = "Все направления", Value = "0"},
        new SelectListItem { Text = "Мирный-Накын",  Value = "1"},
        new SelectListItem { Text = "Накын-Мирный",  Value = "2"},
        new SelectListItem { Text = "Нюрба-Накын",   Value = "3"},
        new SelectListItem { Text = "Накын-Нюрба",   Value = "4"},
        new SelectListItem { Text = "Вилюйск-Накын", Value = "5" },
        new SelectListItem { Text = "Накын-Вилюйск", Value = "6" },
        new SelectListItem { Text = "Накын-Чукар", Value = "7" },
        new SelectListItem { Text = "Чукар-Накын", Value = "8" },
        new SelectListItem { Text = "Кюндядя-Накын", Value = "9" },
        new SelectListItem { Text = "Накын-Кюндядя", Value = "10" },
        new SelectListItem { Text = "Малыкай-Накын", Value = "11" },
        new SelectListItem { Text = "Накын-Малыкай", Value = "12" } },         
        new { @style = "selected:false; border:none", @class="ddl"})
    </h4>

    <table align="center" class="table  table-hover" style="text-align:center;width:1600px">
        <tr class="grad-grey-table">
            <th style="display:none"></th>
            <th style="text-align:center; width:3.5cm">Время вылета</th>
            <th style="text-align:center;width:2.5cm">№ рейса</th>
            <th style="text-align:center;width:3.5cm">От куда</th>
            <th style="text-align:center;width:4cm">Куда</th>
            <th style="text-align:center;width:4cm">Тип В/С</th>
            <th style="text-align:center;width:4cm">Регистрация</th>
            <th style="text-align:center;width:3cm">Всего</th>
            <th style="text-align:center;width:2cm"><img class="sms-info" style="cursor:help" src="~/Image/sms-info.png" /></th>
            <th style="text-align:center">Примечание</th>           
            <th style="text-align:center">Действия</th>
        </tr>

        @foreach (var day in Model.Select(d => d.FlightDate).Distinct())
        {
            /*Строка с названием дня недели*/
            <tr>
                <td colspan="10" style="font-size:14pt;font-style:italic;font-family:'Segoe Print';padding:1px" class="grad">
                    <b>@day.ToString("dddd"), @day.ToString("D")</b>
                </td>
            </tr>

            foreach (var item in Model.Where(f => f.FlightDate == day).OrderByDescending(f => f.Departure == "Мирный" && f.Arrival == "Накын")
                    .ThenByDescending(f => f.Departure == "Накын" && f.Arrival == "Мирный").ThenByDescending(f => f.Departure == "Нюрба" && f.Arrival == "Накын")
                    .ThenByDescending(f => f.Departure == "Накын" && f.Arrival == "Нюрба").ThenByDescending(f => f.Departure == "Накын" && f.Arrival == "Вилюйск")
                    .ThenByDescending(f => f.Departure == "Вилюйск" && f.Arrival == "Накын").ThenBy(f => f.FlightNum))
            {
                //определяыем цвет строки
                switch (item.Approved.Trim())
                {
                    case "Открыта":
                        ViewBag.Color = "pusto";
                        break;
                    case "Ограничена":
                        ViewBag.Color = "info";
                        break;
                    case "Приостановлена":
                        ViewBag.Color = "danger";
                        break;
                    case "Закрыта":
                        ViewBag.Color = "warning";
                        break;
                    case "В архиве":
                        ViewBag.Color = "grad-archive";
                        break;
                }

                <tr style="text-align:center" class=@ViewBag.Color>
                    <td style="display:none">@Html.DisplayFor(model => item.id)</td>
                    <td style="width:3.5cm">
                        @Html.DisplayFor(modelItem => item.FlightTime).ToString().Substring(0, 5)
                    </td>
                    <td>@Html.DisplayFor(modelItem => item.FlightNum)</td>
                    <td>@Html.DisplayFor(modelItem => item.Departure)</td>
                    <td>@Html.DisplayFor(modelItem => item.Arrival)</td>
                    <td>@Html.DisplayFor(modelItem => item.AirType)</td>
                    <td>@Html.DisplayFor(modelItem => item.Approved)</td>
                    <td style="color:@(item.Number - countp.Count(p => p == item.id) < 0 ? "chocolate" : "black")">@(ViewBag.countp = countp.Count(p => p == item.id) + " из " + Html.DisplayFor(modelItem => item.Number))</td> @*Считаем количество пассажиров на рейсе*@
                   @if (item.Approved == "Закрыта" || item.Approved == "В архиве")
                   {
                       if (countp.Count(p => p == item.id) == 0)
                       {
                        <td style="text-align:center;width:1cm"><img style="cursor:help" class="sms-nulllist" src="~/Image/sms-nulllist.png" /></td>
                       }
                       else
                       {
                           switch (item.SendingSms)
                           {
                               case null:
                                   if (item.FlightDate <= DateTime.Now.Date)
                                   {
                                    <td style="text-align:center;width:1cm"><img style="cursor:help" class="sms-notsend" src="~/Image/sms-notsend.png" ) /></td>
                                   }
                                   else
                                   {
                                    <td style="text-align:center;width:1cm"><img style="cursor:help" class="sms-wait" src="~/Image/sms-wait.png" ) /></td>
                                   }
                                   break;
                               case false:
                                <td style="text-align:center;width:1cm"><img style="cursor:help" class="sms-notsend" src="~/Image/sms-notsend.png" /></td>
                                   break;
                               case true:
                                <td style="text-align:center;width:1cm"><img style="cursor:help" class="sms-send" src="~/Image/sms-send.png" /></td>
                                   break;
                           }
                       }
                   }
                   else
                   {                     
                        <td></td>
                   }
                    <td>
                        @Html.DisplayFor(modelItem => item.Note)
                    </td>                   
                    <td style="text-align:center">
                     @Html.ActionLink("Посмотреть", "Registration", new { FlightID = item.id })
                     </td>
                </tr>
            }
        }
    </table>
</div>

@section scripts
        {
    <script type="text/javascript">
        $(window).ready(function () {
            //запрещаем браузеру кэшировать данные AJAX
            $.ajaxSetup({ cache: false });
            //Так как дерево DOM будет динамически загружено, то нам необходимо удалить все объекты Datapicker, иначе не он будет работать при загрузке страницы
            $("#ui-datepicker-div").remove();
            //Для того что бы активировать DropDown menu обновляем его
            $(".dropdown-toggle").dropdown();
        });       

        $(function () {
                     
            $("#ViewDateStart").click(function () {
                $("#ChoosDate").val(0);
                $("#StartDate").datepicker({ showOtherMonths: true, selectOtherMonths: true, dateFormat: "yy-mm-dd", showAnim: "puff" }).datepicker("show")
            });

            $("#ViewDateEnd").click(function () {
                $("#ChoosDate").val(0);
                $("#EndDate").datepicker({ showOtherMonths: true, selectOtherMonths: true, dateFormat: "yy-mm-dd", showAnim: "puff" }).datepicker("show")
            });

            $("#ViewCurrentDate").click(function () {
                $("#ChoosDate").val(1);
                $("#CurrentDate").datepicker({ showOtherMonths: true, selectOtherMonths: true, dateFormat: "yy-mm-dd", showAnim: "puff" }).datepicker("show")
            });

            //отправка значений в контроллер при изменении даты
            $("#StartDate, #EndDate, #CurrentDate").change(function () {
                var url = "@Url.Action("Start")?StartDate=" + $("#StartDate").val() + "&EndDate=" + $("#EndDate").val() + "&CurrentDate=" + $("#CurrentDate").val() + "&ChoosDate=" + $("#ChoosDate").val();
                $(".footer").hide();
                $("#res").load(url);
            });

            //Выбор направления вылета
            $("#selectRoute").change(function () {
                var url = "@Url.Action("Start")";
                var data = {
                    selectRoute: $("#selectRoute").val()
                };
                $(".footer").hide();
                $("#res").load(url, data);
            });            

            //********************Поиск пассажира*****************************************/////
            $("#findpass").autocomplete({
                source: '@Url.Action("AutocompleteFindPassenger")',
                select: function (event, ui) {
                    $("#idpass").val(ui.item.id);
                    var url = "@Url.Action("Start")";
                    $(".footer").hide();
                    $("#res").load(url, { findpassenger: $("#idpass").val() });
                },
            });

            //Поиск при клике на значке лупы
            $("#find").click(function () {
                var url = "@Url.Action("Start")";
                var data = {
                    findpassenger: $("#idpass").val()
                };
                $(".footer").hide();
                $("#res").load(url, data);
            });
             //отправляем значения idpass в контроллер при потере фокуса
            $("#findpass").focusout(function () {               
                if ($("#findpass").val().length === 0) {                
                    var url = "@Url.Action("Start")";
                    var data = {
                        findpassenger: $("#idpass").val()
                    };
                    $(".footer").hide();
                    $("#res").load(url, data);
                }
            });

            $("#findpass").myTooltip({
                offset: 15,
                content: 'Введите первые буквы фамилии. Для отмены поиска очистите данное поле',
                direction: 'bottom',
                animateOffsetPx: 50, //animateDuration
                action: 'hover', //action:'hover', action:'click'
                customClass: 'my-tooltip', //my-tooltip - это класс с закруглёнными краями
                disposable: true
            });

            //очищаем поле поиска при нажатии на клавишу 8-backspace, 46 - del,
            $("#findpass").keyup(function (e) {             
                if ($("#idpass").val() !== "0") {                 
                    if (e.keyCode == 8 || e.keyCode == 46) {                    
                        $("#idpass").val(0)
                        $("#findpass").val("");
                    }
                }
             })       
             
////*****************Конец блока поиска пассжира*************///////////////////
                       
            //Всплывающее меню на конверте
            $(".sms-info").myTooltip({
                offset: 15,
                hideTime: 3000,
                content: 'Информация и уведомления о рейсах',
                direction: 'right',
                action: 'click', //action:'hover', action:'click'
                customClass: 'my-tooltip', //my-tooltip - это класс с закруглёнными краями                
            });
            //Всплывающее меню 
            $(".sms-send").myTooltip({
                offset: 15,
                content: 'Смс уведомление отправлено',
                direction: 'right',
                hideTime: 3000,
                animateOffsetPx: 100, //animateDuration
                action: 'click', //action:'hover', action:'click'
                customClass: 'my-tooltip', //my-tooltip - это класс с закруглёнными краями                
            });
            //Всплывающее меню 
            $(".sms-notsend").myTooltip({
                offset: 15,
                hideTime: 3000,
                content: 'При отправке смс возникли проблемы или не все пользователи получили смс',
                direction: 'right',
                animateOffsetPx: 100, //animateDuration
                action: 'click', //action:'hover', action:'click'
                customClass: 'my-tooltip', //my-tooltip - это класс с закруглёнными краями                
            });
            //Всплывающее меню 
            $(".sms-wait").myTooltip({
                offset: 15,
                hideTime: 3000,
                content: 'Уведомление ожидает отправки<br>(за 2 дня до вылета)',
                direction: 'right',
                animateOffsetPx: 100, //animateDuration
                action: 'click', //action:'hover', action:'click'
                customClass: 'my-tooltip', //my-tooltip - это класс с закруглёнными краями                
            });
            //Всплывающее меню
            $(".sms-nulllist").myTooltip({
                offset: 15,
                hideTime: 3000,
                content: 'Нет пассажиров для отправки',
                direction: 'right',
                animateOffsetPx: 100, //animateDuration
                action: 'click', //action:'hover', action:'click'
                customClass: 'my-tooltip', //my-tooltip - это класс с закруглёнными краями                
            });
            

    });//function

    </script>
}

